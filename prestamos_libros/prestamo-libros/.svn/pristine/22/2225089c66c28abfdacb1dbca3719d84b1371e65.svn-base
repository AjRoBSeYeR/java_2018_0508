package com.ipartek.formacion.prestamolibros.controller;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLIntegrityConstraintViolationException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.ipartek.formacion.prestamolibros.model.AlumnoDAO;
import com.ipartek.formacion.prestamolibros.pojo.Alert;
import com.ipartek.formacion.prestamolibros.pojo.Alumno;

/**
 * Servlet implementation class Controller
 */
@WebServlet("/backoffice/alumnos")
public class AlumnosController extends HttpServlet implements CrudControllable {
	private static final long serialVersionUID = 1L;
	private AlumnoDAO daoAlumno;
	private Alert alert;
	private String op;
	private String view;
	private String id;
	private String nombre;
	private String apellidos;

	@Override
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		daoAlumno = AlumnoDAO.getInstance();
	}

	@Override
	public void destroy() {
		super.destroy();
		daoAlumno = null;
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doProcess(request, response);

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doProcess(request, response);

	}

	@Override
	public void getParameters(HttpServletRequest request) {
		
		try {
			request.setCharacterEncoding(ENCODE);
			op = (request.getParameter("op") != null) ? request.getParameter("op") : OP_LISTAR;
			id = request.getParameter("id");
			nombre = request.getParameter("nombre");
			apellidos = request.getParameter("apellidos");
			
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
			alert = new Alert();
		}

	}

	@Override
	public void doProcess(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		try {
			alert = null;
			getParameters(request);
			switch (op) {
			case OP_ELIMINAR:
				eliminar(request);
				break;

			case OP_IR_FORMULARIO:
				irFormulario(request);
				break;

			case OP_GUARDAR:
				guardar(request);
				break;

			default:// LISTAR

				listar(request);
				break;

			// buscar operacion a realizar
			}
		} catch (Exception e) {
			e.printStackTrace();

			alert = new Alert();
		} finally {

			request.setAttribute("alert", alert);
			request.getRequestDispatcher(view).forward(request, response);

			try {
				listar(request);
			} catch (Exception e) {

				e.printStackTrace();
			}

		}

	}

	@Override
	public void guardar(HttpServletRequest request) throws Exception {
			
		Alumno alumno = new Alumno();
		
		try {
			
			alumno.setId(Long.parseLong(id));
			alumno.setNombre(nombre);
			alumno.setApellidos(apellidos);
			
			if(alumno.getId() == -1) {
				
				if(daoAlumno.insert(alumno)) {
					alert = new Alert(Alert.SUCCESS, "Alumno <b>" + alumno.getNombre() + "</b> creado correctamente.");
				}
			
			}else {
				
				if(daoAlumno.update(alumno)) {
					alert = new Alert(Alert.SUCCESS, "Alumno <b>" + alumno.getNombre() + "</b> modificado correctamente.");
				}
			}
									
			
		}catch (SQLIntegrityConstraintViolationException e) {
			e.printStackTrace();
			alert = new Alert(Alert.WARNING, "El  <b>" + alumno.getNombre() + "</b> ya existe.");
		}
		
		catch (Exception e) {
			e.printStackTrace();
			alert = new Alert();
		}
		
		listar(request);
		
	}

	@Override
	public void listar(HttpServletRequest request) throws Exception {
		request.setAttribute("alumnos", daoAlumno.getAll());
		view = "alumnos/alumno.jsp";

	}

	@Override
	public void irFormulario(HttpServletRequest request) throws Exception {
		alert = null;
		view = "alumnos/formulario.jsp";
		if (id.equalsIgnoreCase("-1")) {
			request.setAttribute("alumno", new Alumno());
		} else {

			request.setAttribute("alumno", daoAlumno.getById(Long.parseLong(id)));

		}
		
	}

	@Override
	public void eliminar(HttpServletRequest request) throws Exception {
		
		try {
			if(id != null && op != null && OP_ELIMINAR.equals(op)) {	//Eliminar
				
				Alumno a  = daoAlumno.getById(Long.parseLong(id));
				
				if(daoAlumno.delete(Long.parseLong(id))) {
					alert = new Alert(Alert.SUCCESS, "Alumno <b>" + a.getNombre() + "</b> eliminado correctamente");
					
				}else {
					alert = new Alert(Alert.WARNING, "No hemos podido eliminar el alumno ");
				}
				
			}	
			
		}catch (Exception e) {
			e.printStackTrace();
			alert = new Alert();
		}
		
		listar(request);
		
	}

}
