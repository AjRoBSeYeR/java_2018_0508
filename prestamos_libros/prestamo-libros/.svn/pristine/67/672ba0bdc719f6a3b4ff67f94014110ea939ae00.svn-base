package com.ipartek.formacion.prestamolibros.controller;

import java.io.IOException;
import java.sql.SQLIntegrityConstraintViolationException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.ipartek.formacion.prestamolibros.model.EditorialDAO;
import com.ipartek.formacion.prestamolibros.model.LibroDAO;
import com.ipartek.formacion.prestamolibros.pojo.Alert;
import com.ipartek.formacion.prestamolibros.pojo.Editorial;
import com.ipartek.formacion.prestamolibros.pojo.Libro;

/**
 * Servlet implementation class LibroController
 */
@WebServlet("/backoffice/libros")
public class LibroController extends HttpServlet implements CrudControllable {
	private static final long serialVersionUID = 1L;
	private LibroDAO daoLibro;
	private EditorialDAO daoEditorial;
	private Alert alert;
	private String op;
	private String view;
	private String id;
	private String titulo;
	private String isbn;
	private Editorial editorial;
	private String idEditorial;
	private String numLibros;

	@Override
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		daoLibro = LibroDAO.getInstance();
		daoEditorial = EditorialDAO.getInstance();
	}

	@Override
	public void destroy() {
		super.destroy();
		daoLibro = null;
		daoEditorial = null;
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doProcess(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doProcess(request, response);
	}

	public void getParameters(HttpServletRequest request) {
		op = (request.getParameter("op") != null) ? request.getParameter("op") : OP_LISTAR;
		id = request.getParameter("id");
		titulo = request.getParameter("titulo");
		isbn = request.getParameter("isbn");
		idEditorial = request.getParameter("idEditorial");

		editorial = new Editorial();
		editorial.setId(Long.parseLong(idEditorial));
		editorial.setEditorial(daoEditorial.editorialGetById(Long.parseLong(idEditorial)).getEditorial());
		
		numLibros=request.getParameter("numLibros");

	}

	@Override
	public void doProcess(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		try {
			alert = null;
			getParameters(request);
			switch (op) {
			case OP_ELIMINAR:
				eliminar(request);
				break;

			case OP_IR_FORMULARIO:
				irFormulario(request);
				break;

			case OP_GUARDAR:
				guardar(request);
				break;

			default:// LISTAR

				listar(request);
				break;

			// buscar operacion a realizar
			}
		} catch (Exception e) {
			e.printStackTrace();

			alert = new Alert();
		} finally {

			request.setAttribute("alert", alert);
			request.getRequestDispatcher(view).forward(request, response);

			try {
				listar(request);
			} catch (Exception e) {

				e.printStackTrace();
			}

		}

	}

	@Override
	public void guardar(HttpServletRequest request) throws Exception {
		Libro libro = new Libro();

		try {

			libro.setId(Long.parseLong(id));
			libro.setIsbn(isbn);
			libro.setTitulo(titulo);
			libro.setEditorial(editorial);
			
			

			if (libro.getId() == -1) {
				daoLibro.libroInsert(titulo, isbn, Long.parseLong(idEditorial), Integer.parseInt(numLibros));
				
				alert = new Alert(Alert.SUCCESS,
						"Libro <b>" + libro.getTitulo() + "</b> creada correctamente.");

			} else {
				//daoEditorial.editorialUpdate(Long.parseLong(id), nombre);
				alert = new Alert(Alert.SUCCESS,
						"Editorial <b>" + libro.getEditorial() + "</b> modificada correctamente.");
			}

		} /*catch (SQLIntegrityConstraintViolationException e) {
			e.printStackTrace();
			alert = new Alert(Alert.WARNING, "La editorial <b>" + libro.getEditorial() + "</b> ya existe.");
		}*/

		catch (Exception e) {
			e.printStackTrace();
			alert = new Alert();
		}

		listar(request);

	}

	@Override
	public void listar(HttpServletRequest request) throws Exception {
		// TODO Auto-generated method stub

	}

	@Override
	public void irFormulario(HttpServletRequest request) throws Exception {
		// TODO Auto-generated method stub

	}

	@Override
	public void eliminar(HttpServletRequest request) throws Exception {
		// TODO Auto-generated method stub

	}
}
